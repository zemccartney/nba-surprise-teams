---
import type { HTMLAttributes } from "astro/types";
interface Props extends HTMLAttributes<"table"> {
  class?: string;
  children: any;
  compact?: boolean;
  stickyHeader?: boolean;
}

const {
  class: classStr,
  compact = false,
  stickyHeader = false,
  ...attrs
} = Astro.props;
---

<style>
  .NBASurpriseTracker-Table {
    @apply shadow-glow border-collapse;

    > thead,
    > tfoot {
      @apply bg-slate-950;
    }

    > thead th {
      /* pr-4 aligns right-edge of th text with td text in col (all cells right-aligned) */
      @apply p-6 pr-4 text-right text-4xl text-lime-400;
    }

    > tbody th,
    > tbody td {
      @apply px-4 py-8 text-4xl text-green-200;
    }

    > tbody > tr {
      &:nth-of-type(2n + 1) {
        @apply bg-lime-950;
      }
    }

    &.compact {
      /* pr-4 aligns right-edge of th text with td text in col (all cells right-aligned) */
      @apply shadow-glow-sm;

      > thead th {
        @apply p-3 pr-4 text-2xl;
      }

      > tbody th,
      > tbody td {
        @apply px-4 py-4 text-2xl text-green-200;
      }
    }

    &.stickyHeader {
      @apply relative;

      > thead th {
        /* Unsure that z-index rule is right here, solved for ensuring header appeared above relatively-positioned links on standings-table */
        @apply sticky top-0 z-10 bg-slate-950;
      }
    }
  }
</style>

<table class:list={["NBASurpriseTracker-Table", classStr]} {...attrs}>
  <thead>
    <slot name="head" />
  </thead>
  <tbody>
    <slot name="body" />
  </tbody>
  <tfoot>
    <slot name="foot" />
  </tfoot>
</table>
