---
import { actions } from "astro:actions";

import type { SeasonId, TeamCode } from "../../data/types";

import * as SeasonUtils from "../../data/seasons";
import Crash from "../crash.astro";
import UI from "./ui.astro";

interface Props {
  seasonId: SeasonId;
  teamId: TeamCode;
}

const { seasonId, teamId } = Astro.props;

const teamSeason = SeasonUtils.getTeamSeason(seasonId, teamId);

const { data, error } = await Astro.callAction(actions.getSeasonData, {
  seasonId: teamSeason.seasonId,
});

if (!error) {
  const { expiresAt } = data;

  if (expiresAt) {
    Astro.response.headers.set(
      "Cache-Control",
      `public, max-age=${Math.round((expiresAt - Date.now()) / 1000)}`,
    );
  }
}
---

{error ? <Crash /> : <UI games={data.games} teamSeason={teamSeason} />}
