---
import Image from "astro/components/Image.astro";
import { getTeamById } from "../data";
import type { TeamCodeType } from "../data";
import QuestionEmoji from "../assets/images/emoji/question.svg";

interface Props {
  class?: string;
  team: TeamCodeType;
  width?: number;
  height?: number;
}

// TODO How is class:list surfaced here?
// width and height defaults are actual dimensions of svg files, downloaded via https://twemoji-cheatsheet.vercel.app/
const { class: className, team, width = 36, height = 36 } = Astro.props;

const TeamLogos = import.meta.glob("../assets/images/emoji/*");

const emojiByTeam: Record<TeamCodeType, string> = {
  BKN: "dragon",
  DET: "racing-car",
  POR: "person-walking",
  CHI: "ox",
  CHA: "honeybee",
  WAS: "mage",
  UTA: "saxophone",
  ATL: "feather",
  TOR: "t-rex",
};

const pathKey = `../assets/images/emoji/${emojiByTeam[team]}.svg`;
// TODO Why is undefined check needed here? TeamLogos[pathKey] as a condition didn't narrow
const emojiSrc =
  emojiByTeam[team] && TeamLogos[pathKey] !== undefined
    ? // https://docs.astro.build/en/reference/modules/astro-assets/#src-required
      (TeamLogos[pathKey]() as Promise<{ default: ImageMetadata }>)
    : QuestionEmoji;
---

{/* TODO Possible to not use the ! assertion? */}

<Image
  src={emojiSrc}
  alt={`Logo for ${getTeamById(team)!.name}`}
  class:list={[className]}
  width={width}
  height={height}
/>
