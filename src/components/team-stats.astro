---
import { actions } from "astro:actions";
import Error from "./error.astro";
import PaceChart from "./pace-chart";
import Popover from "./popover";
import ResultEmoji from "./result-emoji.astro";
import Table from "./table.astro";
import * as Utils from "../utils";
import type { TeamSeason } from "../data";
import type { TeamStats } from "../utils";

interface Props {
  teamSeason: TeamSeason;
}

const { teamSeason } = Astro.props;

const stats: TeamStats = { w: 0, l: 0, overUnder: teamSeason.overUnder };

// TODO What happens to errors here if thrown? How do those surface?
const { error, data: games } = await Astro.callAction(actions.getSeasonData, {
  seasonId: teamSeason.season,
});

if (!error) {
  for (const game of games) {
    if (
      game.homeTeam === teamSeason.team ||
      game.awayTeam === teamSeason.team
    ) {
      const homeWin = game.homeScore > game.awayScore;

      if (teamSeason.team === game.homeTeam) {
        stats[homeWin ? "w" : "l"] += 1;
      } else {
        stats[homeWin ? "l" : "w"] += 1;
      }
    }
  }
}

// TODO Handle look up errors and action errors
---

<style>
  .NBASurpriseTracker-TeamStats {
    grid-template-columns: 3fr 2fr;

    .NBASurpriseTracker-Table {
      > thead {
        @apply hidden;
      }

      > tbody th {
        @apply border-b-2 border-b-slate-800 text-lime-400;
      }

      > tbody td {
        @apply text-right;
      }

      > tbody th {
        @apply bg-slate-950;
      }
    }
  }
</style>

{
  error ? (
    <Error />
  ) : (
    <>
      {(Utils.isSurprise(stats) || Utils.isEliminated(stats)) && (
        <div class="mb-16 flex flex-row items-center justify-center gap-4">
          {Utils.isSurprise(stats) && (
            <>
              <ResultEmoji name="surprise" width={32} />
              <h2 class="text-center text-lg text-green-200 md:text-2xl">
                Surprise Team!
              </h2>
              <ResultEmoji name="celebration" width={32} />
            </>
          )}
          {Utils.isEliminated(stats) && (
            <>
              <ResultEmoji name="eliminated" width={32} />
              <p class="text-center text-lg text-green-200 md:text-2xl">
                Eliminated.
                <br />
                No surprise this year
              </p>
              <ResultEmoji name="disappointed" width={32} />
            </>
          )}
        </div>
      )}

      <div class="NBASurpriseTracker-TeamStats flex flex-col-reverse gap-16 lg:grid">
        <PaceChart client:load games={games} teamSeason={teamSeason} />
        <Table class="compact max-h-32">
          <Fragment slot="head">
            <tr>
              <td class="w-2/3" />
              <td class="w-1/3" />
            </tr>
          </Fragment>
          <Fragment slot="body">
            <tr>
              <th scope="row">Record</th>
              <td>{Utils.displayRecord(stats)}</td>
            </tr>
            <tr>
              <th scope="row">
                <span class="md:hidden">O/U</span>
                <span class="hidden md:inline">Over/Under</span>
              </th>
              <td>{teamSeason.overUnder}</td>
            </tr>
            <tr>
              <th scope="row" class="relative">
                Wins Needed
                <Popover client:load>
                  <p class="mb-1 font-bold underline">Wins Needed</p>
                  10 wins above a team's preseason over/under (rounded up)
                </Popover>
              </th>
              <td>{Utils.toSurprise(stats)}</td>
            </tr>
            <tr>
              <th scope="row" class="relative">
                Pace (Projected Record)
                <Popover client:load>
                  <p class="mb-1 font-bold underline">Projected Record</p>
                  <p class="mb-4">
                    How many wins the team would have if their current winning
                    percentage held for all 82 games.
                  </p>
                  <p class="mb-1 font-bold underline">Pace</p>
                  <p>Current Wins - Wins Needed to surprise</p>
                </Popover>
              </th>
              <td>
                {`${Utils.displayPace(Utils.pace(stats))} (${Utils.projectedWins(stats)} - ${82 - Utils.projectedWins(stats)})`}
              </td>
            </tr>
            <tr>
              <th scope="row" class="relative">
                Surprise Have-to-Go
                <Popover client:load>
                  <p class="mb-1 font-bold underline">Surprise Have-to-Go</p>
                  <p class="mb-4">
                    What would a team "have to go" the rest of the way to end up
                    a surprise team? As in, the worst record over games
                    remaining with which the team would still achieve surprise
                    status.
                  </p>
                  <p class="mb-1 font-bold underline">Pace</p>
                  <p>Current Wins - Wins Needed to surprise</p>
                </Popover>
              </th>
              <td>
                {() => {
                  const recordRemaining =
                    Utils.recordRemainingToSurprise(stats);

                  if (!recordRemaining) {
                    return (
                      <ResultEmoji
                        class="mx-auto"
                        name="eliminated"
                        width={20}
                      />
                    );
                  }

                  if (recordRemaining === true) {
                    return (
                      <ResultEmoji class="mx-auto" name="surprise" width={20} />
                    );
                  }

                  return Utils.displayRecord(recordRemaining);
                }}
              </td>
            </tr>
          </Fragment>
        </Table>
      </div>
    </>
  )
}
