---
import type { GetStaticPaths, InferGetStaticParamsType } from "astro";

import { getCollection } from "astro:content";

import Link from "../../components/link.astro";
import Logo from "../../components/logo.astro";
import TeamStats from "../../components/team-stats/index.astro";
import * as ContentUtils from "../../content/utils";
import Subpage from "../../layouts/subpage.astro";

export const getStaticPaths = (async () => {
  const teamSeasons = await getCollection("teamSeasons");
  return teamSeasons.map((ts) => ({
    params: { season: ts.data.seasonId, team: ts.data.teamId },
  }));
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { season: seasonId, team: teamId } = Astro.params as Params;

console.log(
  seasonId,
  typeof seasonId,
  "NEED TO FORCE TO NUMBER, SINCE TYPED AS NUMBER BY PARAMS?",
);

const team = await ContentUtils.getTeamById(teamId);
const season = await ContentUtils.getSeasonById(seasonId);

if (!(team && season)) {
  throw new Error(`Team ${teamId} or season ${seasonId} not found`);
}

const hasArchive = await ContentUtils.getSeasonArchive(season.id);
const fmtSeason = ContentUtils.abbreviateSeasonRange(season, { compact: true });
---

<Subpage
  description={`${fmtSeason} Season Results for the ${team.data.name}`}
  title={`${team.id} ${fmtSeason}`}
>
  {
    hasArchive && (
      <div class="mb-12 text-center md:-mt-6">
        <Link class="text-lg md:text-xl lg:text-2xl" href={`/${season.id}`}>
          Back to {fmtSeason} Season
        </Link>
      </div>
    )
  }

  <div
    class="mb-12 flex flex-col items-center justify-center gap-8 sm:px-8 lg:flex-row"
  >
    <Logo class="w-[96px]" loading="eager" seasonId={season.id} team={team} />
    <h1
      class="font-title text-center text-2xl text-balance text-lime-400 md:text-4xl"
    >
      {ContentUtils.resolveTeamName(team, season.id)}
    </h1>
    {
      hasArchive && (
        <p class="font-title text-2xl whitespace-nowrap text-lime-400 md:text-4xl">
          {fmtSeason}
        </p>
      )
    }
  </div>
  <TeamStats seasonId={season.id} teamId={team.id} />
</Subpage>
