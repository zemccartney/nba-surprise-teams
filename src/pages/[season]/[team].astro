---
import SubpageLayout from "../../layouts/subpage.astro";
import Loading from "../../components/loading.astro";
import Logo from "../../components/logo.astro";
import TeamStats from "../../components/team-stats.astro";
import { TEAM_SEASONS, getTeamById, getTeamSeason } from "../../data";
import type { TeamCode } from "../../data";

export function getStaticPaths() {
  return TEAM_SEASONS.map((ts) => ({
    params: { season: ts.season, team: ts.team },
  }));
}

// non-null assertion here as we're taking for granted that I didn't fuck up our constants and
// that TEAM_SEASONS has "referential integrity"
/* eslint-disable @typescript-eslint/no-non-null-assertion */
const team = getTeamById(Astro.params.team as TeamCode)!;
const teamSeason = getTeamSeason(
  Astro.params.team,
  // TODO File bug? param mistyped; typed as a number in IDE, but actually a string
  // @ts-expect-error : "Argument of type 'number' is not assignable to parameter of type 'string'"
  Number.parseInt(Astro.params.season, 10),
)!;
/* eslint-enable @typescript-eslint/no-non-null-assertion */

const fmtSeason = `${teamSeason.season}-${(teamSeason.season + 1).toString().slice(2)}`;
const fmtSeasonShort = `'${teamSeason.season.toString().slice(2)}-${(teamSeason.season + 1).toString().slice(2)}`;
---

<SubpageLayout
  title={`${team.id} ${fmtSeasonShort}`}
  description={`${fmtSeason} Season Results for the ${team.name}`}
>
  <div class="flex flex-col items-center justify-center gap-8 lg:flex-row">
    <Logo teamCode={team.id} class="w-[96px]" />
    <h1 class="text-center font-title text-4xl text-lime-400">
      {team.name}
    </h1>
  </div>
  <TeamStats server:defer teamSeason={teamSeason}>
    <Loading slot="fallback" />
  </TeamStats>
</SubpageLayout>
